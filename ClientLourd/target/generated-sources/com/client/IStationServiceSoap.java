
package com.client;

import jakarta.jws.WebMethod;
import jakarta.jws.WebParam;
import jakarta.jws.WebResult;
import jakarta.jws.WebService;
import jakarta.xml.bind.annotation.XmlSeeAlso;
import jakarta.xml.ws.RequestWrapper;
import jakarta.xml.ws.ResponseWrapper;


/**
 * This class was generated by the XML-WS Tools.
 * XML-WS Tools 4.0.1
 * Generated source version: 3.0
 * 
 */
@WebService(name = "IStationServiceSoap", targetNamespace = "http://tempuri.org/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface IStationServiceSoap {


    /**
     * 
     * @param arrival
     * @param departure
     * @param step
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "GetItinerary", action = "http://tempuri.org/IStationServiceSoap/GetItinerary")
    @WebResult(name = "GetItineraryResult", targetNamespace = "http://tempuri.org/")
    @RequestWrapper(localName = "GetItinerary", targetNamespace = "http://tempuri.org/", className = "com.client.GetItinerary")
    @ResponseWrapper(localName = "GetItineraryResponse", targetNamespace = "http://tempuri.org/", className = "com.client.GetItineraryResponse")
    public String getItinerary(
        @WebParam(name = "departure", targetNamespace = "http://tempuri.org/")
        String departure,
        @WebParam(name = "arrival", targetNamespace = "http://tempuri.org/")
        String arrival,
        @WebParam(name = "step", targetNamespace = "http://tempuri.org/")
        String step);

}
